package recruitmentapi.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;

import java.util.ArrayList;
import java.util.List;

@DynamoDBTable(tableName = "Tests")
public class Test {

    private String id;
    private String parentId;
    private String title;
    private String lang;
    private ArrayList<Question> questions;
    private List<String> targetLanguages;

    @DynamoDBHashKey(attributeName = "Id")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @DynamoDBAttribute(attributeName = "ParentId")
    public String getParentId() {
        return parentId;
    }

    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    @DynamoDBAttribute(attributeName = "Title")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @DynamoDBAttribute(attributeName = "Language")
    public String getLang() {
        return lang;
    }

    public void setLang(String lang) {
        this.lang = lang;
    }

    @DynamoDBAttribute(attributeName = "Questions")
    public ArrayList<Question> getQuestions() {
        return questions;
    }

    public void setQuestions(ArrayList<Question> questions) {
        this.questions = questions;
    }

    @DynamoDBAttribute(attributeName = "TargetLanguages")
    public List<String> getTargetLanguages() {
        return targetLanguages;
    }

    public void setTargetLanguages(List<String> targetLanguages) {
        this.targetLanguages = targetLanguages;
    }

    public static boolean isSupportedLanguage(String lang) {
        return lang.equals("en") ||
                lang.equals("pl") ||
                lang.equals("de") ||
                lang.equals("fr") ||
                lang.equals("jp") ||
                lang.equals("ru") ||
                lang.equals("cn");
    }

    @DynamoDBIgnore
    public List<String> getTranslatableTexts() {
        List<String> texts = new ArrayList<>();

        if (title != null && !title.isEmpty()) {
            texts.add(title);
        }

        for (Question question : questions) {
            texts.addAll(question.getTranslatableTexts());
        }

        return texts;
    }

    public static Test translate(Test base, String lang, List<String> texts) {
        Test newTest = new Test();
        newTest.parentId = base.id;
        newTest.lang = lang;
        newTest.targetLanguages = base.targetLanguages;

        if (base.title != null && !base.title.isEmpty()) {
            newTest.title = texts.remove(0);
        }

        if (base.questions != null) {
            ArrayList<Question> questions = new ArrayList<>();
            for (Question question : base.questions) {
                questions.add(Question.translate(question, texts));
            }
            newTest.setQuestions(questions);
        }

        return newTest;
    }

    @Override
    public String toString() {
        return "Test{" +
                "id=" + id +
                ", title='" + title + '\'' +
                ", lang='" + lang + '\'' +
                ", questions=" + questions +
                '}';
    }
}
